"use strict";(self.webpackChunkahj_12_2_workers_hasher=self.webpackChunkahj_12_2_workers_hasher||[]).push([[179],{611:(t,e,i)=>{function s(){return new Worker(i.p+"./web.worker.js")}class l{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.file=null,this.onChange=this.onChange.bind(this),this.onDrop=this.onDrop.bind(this),this.onSelectedClick=this.onSelectedClick.bind(this),this.onListClick=this.onListClick.bind(this)}init(){this.container.innerHTML=l.markUp,this.fileInput=this.container.querySelector('[data-id="file_input"]'),this.listOfAlgorithms=this.container.querySelector('[data-id="algorithms"]'),this.selectedAlgorithm=this.container.querySelector('[data-id="selected"]'),this.hashValue=this.container.querySelector('[data-id="hash_value"]'),this.label=this.container.querySelector('[data-id="label"]'),this.selectedAlgorithm.textContent=this.listOfAlgorithms.querySelector(".block__menu-item.checked").textContent,this.fileInput.addEventListener("change",this.onChange),this.label.addEventListener("dragover",(t=>t.preventDefault())),this.label.addEventListener("drop",this.onDrop),this.selectedAlgorithm.addEventListener("click",this.onSelectedClick),this.listOfAlgorithms.addEventListener("click",this.onListClick)}onSelectedClick(){this.listOfAlgorithms.classList.remove("d_none")}onListClick(t){if("crypto"===t.target.dataset.name){[...this.listOfAlgorithms.children].forEach((t=>{t.classList.remove("checked")})),t.target.classList.add("checked");const e=t.target.textContent;this.selectedAlgorithm.textContent=e,this.listOfAlgorithms.classList.add("d_none"),this.file&&this.hashValue.textContent&&this.getWorker()}}getCryptoID(){return this.listOfAlgorithms.querySelector(".block__menu-item.checked").dataset.id}onChange(t){[this.file]=Array.from(t.currentTarget.files),this.getWorker(),this.fileInput.value=""}onDrop(t){t.preventDefault(),[this.file]=Array.from(t.dataTransfer.files),this.getWorker()}getWorker(){const t=new s;t.addEventListener("message",(({data:e})=>{this.hashValue.textContent=e,t.terminate()})),t.postMessage({file:this.file,cryptoID:this.getCryptoID()})}static get markUp(){return'<div class="container">\n    <div class="block">\n      <div class="block__wrapper">\n        <h3 class="block__title">Hasher</h3>\n        <form action="" class="block__form">\n          <label class="block__form-label" data-id="label" for="input">\n            Drop files here<br>or<br>Click to select\n          </label>\n          <input class="block__form-input visually_hidden" id="input" type="file" data-id="file_input">\n        </form>\n        <div class="block__menu">\n          <label class="block__menu-title">\n            Hash Algorithm:\n            <span class="menu-title__value" data-id="selected"></span>\n          </label>\n          <ul class="block__menu-list d_none" data-id="algorithms">\n            <li class="block__menu-item checked" data-name="crypto" data-id="md5">MD5</li>\n            <li class="block__menu-item" data-name="crypto" data-id="sha1">SHA1</li>\n            <li class="block__menu-item" data-name="crypto" data-id="sha256">SHA256</li>\n            <li class="block__menu-item" data-name="crypto" data-id="sha512">SHA512</li>\n          </ul>\n        </div>\n      </div>\n      <div class="block__hash">\n        <label>\n          Calculated Hash:\n          <div class="block__hash-value" data-id="hash_value"></div>\n        </label>\n      </div>\n    </div>\n  </div>'}}new l(document.getElementById("root")).init()}},t=>{t(t.s=611)}]);